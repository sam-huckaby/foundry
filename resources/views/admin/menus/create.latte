{extends "../../layouts/admin.latte"}

{block content}
<div class="min-h-screen bg-gray-50">
    <!-- Main Content -->
    <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <!-- Header Section -->
        <div class="px-4 py-5 sm:px-0">
            <h2 class="text-3xl font-bold text-gray-900">Create New Menu</h2>
        </div>

        <!-- Form Section -->
        <div class="mt-8">
            <div class="bg-white shadow overflow-hidden sm:rounded-lg">
                <div class="px-4 py-5 sm:p-6">
                    <form action="/admin/menus" method="POST">
                        <div class="space-y-6">
                            <div>
                                <label for="name" class="block text-sm font-medium text-gray-700">Menu Name</label>
                                <div class="mt-1">
                                    <input type="text" name="name" id="name" required
                                           class="shadow-sm focus:ring-[#ff7700] focus:border-[#ff7700] block w-full sm:text-sm border-gray-300 rounded-md"
                                           placeholder="Enter menu name">
                                </div>
                            </div>

                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Menu Items</label>
                                <div id="menu-items" class="space-y-4">
                                    <!-- Menu items will be added here -->
                                </div>
                                <div class="mt-4">
                                    <button type="button" onclick="addMenuItem()" 
                                            class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ff7700]">
                                        <i class="bi bi-plus-circle mr-2"></i>Add Menu Item
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="mt-6 flex justify-end space-x-3">
                            <a href="/admin/menus" class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ff7700]">
                                Cancel
                            </a>
                            <button type="submit" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-[#ff7700] hover:bg-[#e66b00] focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#ff7700]">
                                Create Menu
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<template id="menu-item-template">
    <div class="bg-white border border-gray-200 rounded-lg p-4" draggable="true">
        <div class="grid grid-cols-1 md:grid-cols-12 gap-4">
            <div class="md:col-span-4">
                <input type="text" class="shadow-sm focus:ring-[#ff7700] focus:border-[#ff7700] block w-full sm:text-sm border-gray-300 rounded-md"
                       name="items[INDEX][title]" placeholder="Menu Item Title" required>
            </div>
            <div class="md:col-span-6">
                <div class="flex space-x-2">
                    <select class="shadow-sm focus:ring-[#ff7700] focus:border-[#ff7700] block w-full sm:text-sm border-gray-300 rounded-md"
                            name="items[INDEX][page_id]">
                        <option value="">Select a page...</option>
                        {foreach $pages as $page}
                        <option value="{$page->id}">{$page->title}</option>
                        {/foreach}
                    </select>
                    <div class="flex items-center">
                        <input type="checkbox" class="h-4 w-4 text-[#ff7700] focus:ring-[#ff7700] border-gray-300 rounded"
                               onchange="toggleExternalUrl(this)">
                    </div>
                    <input type="text" class="shadow-sm focus:ring-[#ff7700] focus:border-[#ff7700] block w-full sm:text-sm border-gray-300 rounded-md"
                           name="items[INDEX][external_url]" placeholder="External URL" disabled>
                </div>
            </div>
            <div class="md:col-span-2 flex items-center justify-end space-x-2">
                <button type="button" onclick="removeMenuItem(this)" 
                        class="text-red-600 hover:text-red-900">
                    <i class="bi bi-trash"></i>
                </button>
                <span class="text-gray-400 cursor-move drag-handle">
                    <i class="bi bi-grip-vertical"></i>
                </span>
            </div>
        </div>
    </div>
</template>

<script src="https://cdn.jsdelivr.net/npm/sortablejs@1.14.0/Sortable.min.js"></script>
<script>
let menuItemIndex = 0;

function addMenuItem() {
    const template = document.getElementById('menu-item-template');
    const menuItems = document.getElementById('menu-items');
    const clone = template.content.cloneNode(true);
    
    // Replace INDEX placeholder with actual index
    const elements = clone.querySelectorAll('[name*="INDEX"]');
    elements.forEach(element => {
        element.name = element.name.replace('INDEX', menuItemIndex);
    });
    
    menuItems.appendChild(clone);
    menuItemIndex++;
}

function removeMenuItem(button) {
    button.closest('.bg-white').remove();
}

function toggleExternalUrl(checkbox) {
    const row = checkbox.closest('.flex');
    const select = row.querySelector('select');
    const input = row.querySelector('input[type="text"]');
    
    select.disabled = checkbox.checked;
    input.disabled = !checkbox.checked;
}

// Initialize drag and drop
document.addEventListener('DOMContentLoaded', function() {
    const menuItems = document.getElementById('menu-items');
    new Sortable(menuItems, {
        animation: 150,
        handle: '.drag-handle',
        onEnd: function() {
            // Update indices after drag
            menuItems.querySelectorAll('.bg-white').forEach((item, index) => {
                item.querySelectorAll('[name*="items["]').forEach(input => {
                    input.name = input.name.replace(/items\[\d+\]/, `items[${index}]`);
                });
            });
        }
    });
});

// Add first menu item by default
addMenuItem();
</script>
{/block} 