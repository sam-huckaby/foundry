#!/usr/bin/env php
<?php

require __DIR__ . '/vendor/autoload.php';

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

class NewCommand extends Command
{
    protected static $defaultName = 'new';

    protected function configure()
    {
        $this
            ->setDescription('Create a new Huckabuild application')
            ->addArgument('name', InputArgument::REQUIRED, 'The name of the application');
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $name = $input->getArgument('name');
        $directory = getcwd() . '/' . $name;

        if (is_dir($directory)) {
            $output->writeln("<error>Application directory already exists!</error>");
            return Command::FAILURE;
        }

        $output->writeln("<info>Creating new Huckabuild application: {$name}</info>");
        
        // Create the application directory
        mkdir($directory, 0755, true);
        
        // Clone the repository
        $process = new \Symfony\Component\Process\Process([
            'git',
            'clone',
            'https://github.com/sam-huckaby/huckabuild.git',
            $directory
        ]);
        
        $process->run(function ($type, $buffer) use ($output) {
            $output->write($buffer);
        });
        
        // Remove the .git directory
        $process = new \Symfony\Component\Process\Process([
            'rm',
            '-rf',
            $directory . '/.git'
        ]);
        
        $process->run();
        
        // Create the SQLite database
        $databaseDir = $directory . '/database';
        if (!is_dir($databaseDir)) {
            mkdir($databaseDir, 0755, true);
        }
        
        touch($databaseDir . '/huckabuild.sqlite');
        
        // Initialize the database
        $process = new \Symfony\Component\Process\Process([
            'sqlite3',
            $databaseDir . '/huckabuild.sqlite',
            '.read database/schema.sql'
        ], $directory);
        
        $process->run();
        
        $output->writeln("<info>Application created successfully!</info>");
        $output->writeln("<comment>Run the following commands to get started:</comment>");
        $output->writeln("cd {$name}");
        $output->writeln("composer install");
        $output->writeln("npm install && npm run build");
        $output->writeln("composer run dev");
        
        return Command::SUCCESS;
    }
}

$application = new Application('Huckabuild Installer', '1.0.0');
$application->add(new NewCommand());
$application->run(); 